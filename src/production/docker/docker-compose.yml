version: '3.8'

services:
  database-mysql:
    image: mysql:8.0.34
    env_file:
      - .env
    restart: always
    hostname: oaken-mysql
    container_name: oaken-mysql
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: oaken
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes: 
      - oaken-mysql:/var/lib/mysql
      - ./app/mysql-startup:/docker-entrypoint-initdb.d
    networks:
      - oaken
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  mysql-kafka-processor:
    image: oaken-mysql-kafka
    env_file:
      - .env
    restart: always
    hostname: mysql-kafka-processor
    container_name: mysql-kafka-processor
    volumes: 
      - oaken-api:/app
    networks:
      - oaken
    depends_on:
      database-mysql:
        condition: service_healthy

  shipping-processor:
    image: oaken-shipping
    env_file:
      - .env
    restart: always
    hostname: shipping-processor
    container_name: shipping-processor
    volumes: 
      - oaken-shipping:/app
    networks:
      - oaken
    depends_on:
      database-mysql:
        condition: service_healthy

  accounting-processor:
    image: oaken-accounting
    env_file:
      - .env
    restart: always
    hostname: accounting-processor
    container_name: accounting-processor
    volumes: 
      - oaken-accounting:/app
    networks:
      - oaken
    depends_on:
      database-mysql:
        condition: service_healthy

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: oaken-dbeaver
    hostname: oaken-dbeaver
    restart: on-failure:5
    ports:
      - 8978:8978
    volumes: 
      - oaken-cloudbeaver:/opt/cloudbeaver/workspace
    networks:
      - oaken
    depends_on:
      database-mysql:
        condition: service_healthy

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - oaken

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "19092:19092"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://kafka1:19092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - oaken

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    container_name: kafka2
    ports:
      - "19093:19093"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL://kafka2:19093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:9093,EXTERNAL://localhost:19093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - oaken

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    container_name: kafka3
    ports:
      - "19094:19094"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka3:9094,EXTERNAL://kafka3:19094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:9094,EXTERNAL://localhost:19094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - oaken

  setup-topics:
    image: confluentinc/cp-kafka:7.3.2
    depends_on:
      - zoo1
      - kafka1
      - kafka2
      - kafka3
    command: /bin/bash -c "/scripts/create-topics.sh"
    volumes:
      - ./create-topics.sh:/scripts/create-topics.sh:ro
    networks:
      - oaken


networks:
  oaken:

volumes:
  oaken-mysql:
    name: oaken-mysql
  oaken-api:
    name: oaken-api
  oaken-shipping:
    name: oaken-shipping
  oaken-accounting:
    name: oaken-accounting
  oaken-cloudbeaver:
    name: oaken-cloudbeaver