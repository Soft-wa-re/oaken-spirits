version: '3.8'

services:
  database-mysql:
    image: mysql:8.0.34
    env_file:
      - .env
    restart: always
    hostname: oaken-mysql
    container_name: oaken-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - 3306:3306
    expose:
      - 3306
    volumes: 
      - oaken-mysql:/var/lib/mysql
      - /app/mysql/init.sql:/docker-entrypoint-initdb.d
    networks:
      - OakenSpirits

  mysql-kafka-processor:
    image: oaken-mysql-kafka
    env_file:
      - .env
    restart: always
    hostname: mysql-kafka-processor
    container_name: mysql-kafka-processor
    volumes: 
      - oaken-api:/app
    networks:
      - OakenSpirits

  shipping-processor:
    image: oaken-shipping
    env_file:
      - .env
    restart: always
    hostname: shipping-processor
    container_name: shipping-processor
    volumes: 
      - oaken-shipping:/app
    networks:
      - OakenSpirits

  accounting-processor:
    image: oaken-accounting
    env_file:
      - .env
    restart: always
    hostname: accounting-processor
    container_name: accounting-processor
    volumes: 
      - oaken-accounting:/app
    networks:
      - OakenSpirits

  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: oaken-dbeaver
    hostname: oaken-dbeaver
    restart: on-failure:5
    ports:
      - 8978:8978
    volumes: 
      - oaken-cloudbeaver:/opt/cloudbeaver/workspace
    networks:
      - OakenSpirits

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - OakenSpirits

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - OakenSpirits

networks:
  OakenSpirits:

volumes:
  oaken-mysql:
    name: oaken-mysql
  oaken-api:
    name: oaken-api
  oaken-shipping:
    name: oaken-shipping
  oaken-accounting:
    name: oaken-accounting
  oaken-cloudbeaver:
    name: oaken-cloudbeave
  oaken-kafka:
    name: oaken-kafka
